#!/usr/bin/env python
# import the python renderman library
import prman
# import the python functions
import sys
import sys, os.path, subprocess
import argparse

def checkAndCompileShader(shader):
    if (
        os.path.isfile(shader + ".oso") != True
        or os.stat(shader + ".osl").st_mtime - os.stat(shader + ".oso").st_mtime > 0
    ):
        print("compiling shader %s" % (shader))
        try:
            subprocess.check_call(["oslc", shader + ".osl"])
        except subprocess.CalledProcessError:
            sys.exit("shader compilation failed")

def Cube(width=1.0, height=1.0, depth=1.0):
    w = width / 2.0
    h = height / 2.0
    d = depth / 2.0
    ri.ArchiveRecord(ri.COMMENT, "Cube Generated by Cube Function")
    # rear
    face = [-w, -h, d, -w, h, d, w, -h, d, w, h, d]
    ri.Patch("bilinear", {"P": face})
    # front
    face = [-w, -h, -d, -w, h, -d, w, -h, -d, w, h, -d]
    ri.Patch("bilinear", {"P": face})
    # left
    face = [-w, -h, -d, -w, h, -d, -w, -h, d, -w, h, d]
    ri.Patch("bilinear", {"P": face})
    # right
    face = [w, -h, -d, w, h, -d, w, -h, d, w, h, d]
    ri.Patch("bilinear", {"P": face})
    # bottom
    face = [w, -h, d, w, -h, -d, -w, -h, d, -w, -h, -d]
    ri.Patch("bilinear", {"P": face})
    # top
    face = [w, h, d, w, h, -d, -w, h, d, -w, h, -d]
    ri.Patch("bilinear", {"P": face})
    ri.ArchiveRecord(ri.COMMENT, "--End of Cube Function--")

def Lego_Logo_2(xScale=1,yScale=1,zScale=1) :

    ri.Scale(xScale,yScale,zScale)
    npolys = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
		1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
		1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
		1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
		1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
    nvertices = [4,4,4,4,4,12,4,14,14,13,4,4,4,6,4,4,4,
		4,4,4,4,4,4,4,4,4,4,6,4,4,4,4,4,4,4,4,4,4,4,4,
		4,4,4,12,4,14,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
		4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,14,13,4,4,4,4,
		4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4]
    PolyVerts = [76,66,57,58,71,72,65,50,
		23,24,39,40,46,47,48,49,46,49,18,45,45,18,19,20,21,22,23,40,41,42,43,
		44,30,31,32,33,38,39,24,25,26,27,28,29,30,33,34,35,36,37,71,50,51,52,
		53,54,55,56,57,66,67,68,69,70,76,58,59,60,61,62,63,64,65,72,73,74,75,
		6,7,16,17,12,13,14,15,8,9,10,11,7,8,11,12,15,16,5,4,83,84,3,
		2,78,79,77,80,79,78,4,3,79,80,1,4,80,77,2,1,77,78,81,84,83,82,
		1,0,81,82,0,5,84,81,4,1,82,83,85,96,95,86,91,94,93,92,87,90,89,
		88,86,95,94,91,90,87,8,7,86,87,15,14,93,94,12,11,90,91,9,8,87,88,
		16,15,94,95,13,12,91,92,10,9,88,89,17,16,95,96,7,6,85,86,14,13,92,
		93,11,10,89,90,6,17,96,85,113,101,102,114,125,128,127,126,125,124,108,128,124,97,
		98,99,100,101,113,112,111,110,109,108,120,107,122,121,103,123,104,105,106,107,120,119,118,
		117,116,115,114,102,46,45,124,125,42,41,100,99,47,46,125,126,48,47,126,127,41,40,
		101,100,49,48,127,128,26,25,115,116,18,49,128,108,39,38,103,102,20,19,109,110,37,
		36,104,123,36,35,105,104,27,26,116,117,21,20,110,111,35,34,106,105,28,27,117,118,
		34,33,107,106,22,21,111,112,29,28,118,119,30,29,119,120,23,22,112,113,31,30,120,
		121,32,31,121,122,33,32,122,107,24,23,113,114,45,44,97,124,38,37,123,103,40,39,
		102,101,43,42,99,98,25,24,114,115,44,43,98,97,19,18,108,109,137,147,138,136,139,
		140,154,131,139,132,133,134,135,136,138,146,145,144,143,142,141,140,137,155,129,130,131,154,
		153,152,151,150,149,148,147,76,75,155,137,75,74,129,155,51,50,140,141,66,76,137,136,
		60,59,148,149,74,73,130,129,73,72,131,130,61,60,149,150,52,51,141,142,58,57,138,
		147,71,70,132,139,62,61,150,151,69,68,134,133,53,52,142,143,63,62,151,152,68,67,
		135,134,54,53,143,144,67,66,136,135,55,54,144,145,64,63,152,153,65,64,153,154,56,
		55,145,146,50,65,154,140,70,69,133,132,57,56,146,138,72,71,139,131,59,58,147,148]
    points=[0.292407006,-0.0100290002,-0.175920993,0.409359992,-0.0100290002,-0.175920993,0.329676986,-0.0100290002,0.188350007,0.300081998,-0.0100290002,0.188350007,
		0.374779999,-0.0100290002,-0.153132007,0.287422001,-0.0100290002,-0.153132007,0.110555001,-0.0100290002,-0.175920993,0.227507994,-0.0100290002,-0.175920993,
		0.147825003,-0.0100290002,0.188350007,0.0308730006,-0.0100290002,0.188350007,0.0358580016,-0.0100290002,0.165561005,0.123216003,-0.0100290002,0.165561005,
		0.154804006,-0.0100290002,0.0211549997,0.0804840028,-0.0100290002,0.0211549997,0.0853580013,-0.0100290002,-0.00112699997,0.159677997,-0.0100290002,-0.00112699997,
		0.192928001,-0.0100290002,-0.153132007,0.105570003,-0.0100290002,-0.153132007,-0.0868040025,-0.0100290002,-0.128868997,-0.0654430017,-0.0100290002,-0.160255998,
		-0.0252199993,-0.0100290002,-0.175549001,0.0024639999,-0.0100290002,-0.173484996,0.0287389997,-0.0100290002,-0.156636998,0.0348259993,-0.0100290002,-0.126408994,
		-0.0237339996,-0.0100290002,0.141299993,-0.0449870005,-0.0100290002,0.172361001,-0.0852930024,-0.0100290002,0.187968001,-0.113055997,-0.0100290002,0.185852006,
		-0.137124002,-0.0100290002,0.171270996,-0.143952996,-0.0100290002,0.160441995,-0.145364001,-0.0100290002,0.138840005,-0.138132006,-0.0100290002,0.105775997,
		-0.108537003,-0.0100290002,0.105775997,-0.116264001,-0.0100290002,0.141097993,-0.113445997,-0.0100290002,0.156231001,-0.105949998,-0.0100290002,0.162524998,
		-0.0873339996,-0.0100290002,0.165346995,-0.068843998,-0.0100290002,0.159044996,-0.0578359999,-0.0100290002,0.149403006,-0.0528820008,-0.0100290002,0.138927996,
		0.00572599983,-0.0100290002,-0.128670007,0.00596700003,-0.0100290002,-0.137105003,-0.00773799978,-0.0100290002,-0.151281998,-0.0356360003,-0.0100290002,-0.149750993,
		-0.0474070013,-0.0100290002,-0.142530993,-0.0577909984,-0.0100290002,-0.126210004,-0.0845990032,-0.0100290002,-0.00365999993,-0.0409189984,-0.0100330003,-0.00365999993,
		-0.045793999,-0.0100330003,0.0186219998,-0.119066998,-0.0100290002,0.0186219998,-0.273871005,-0.0100290002,-0.128868997,-0.252510011,-0.0100290002,-0.160255998,
		-0.212286994,-0.0100290002,-0.175549001,-0.200004995,-0.0100290002,-0.175830007,-0.171191007,-0.0100290002,-0.167862996,-0.154874995,-0.0100290002,-0.151199996,
		-0.151205003,-0.0100290002,-0.136102006,-0.152241006,-0.0100290002,-0.126408994,-0.210801005,-0.0100290002,0.141299993,-0.232053995,-0.0100290002,0.172361001,
		-0.256590992,-0.0100290002,0.184871003,-0.272359997,-0.0100290002,0.187968001,-0.300123006,-0.0100290002,0.185852006,-0.324191004,-0.0100290002,0.171271995,
		-0.331019998,-0.0100290002,0.160441995,-0.332432002,-0.0100290002,0.138841003,-0.181341007,-0.0100290002,-0.128668994,-0.183286995,-0.0100290002,-0.142545,
		-0.197924003,-0.0100290002,-0.152335003,-0.219373003,-0.0100290002,-0.150956005,-0.230770007,-0.0100290002,-0.145319,-0.244857997,-0.0100290002,-0.126210004,
		-0.303330988,-0.0100290002,0.141097993,-0.300512999,-0.0100290002,0.156231001,-0.284456015,-0.0100290002,0.165162995,-0.257927001,-0.0100290002,0.160215005,
		-0.239813998,-0.0100290002,0.138638005,0.409359992,0.00958499964,-0.175920993,0.329676986,0.00958499964,0.188350007,0.300081998,0.00958499964,0.188350007,
		0.374779999,0.00958499964,-0.153132007,0.292407006,0.00958499964,-0.175920993,0.409359992,0.00958499964,-0.175920993,0.374779999,0.00958499964,-0.153132007,
		0.287422001,0.00958499964,-0.153132007,0.110555001,0.00958499964,-0.175920993,0.227507994,0.00958499964,-0.175920993,0.147825003,0.00958499964,0.188350007,
		0.0308730006,0.00958499964,0.188350007,0.0358580016,0.00958499964,0.165561005,0.123216003,0.00958499964,0.165561005,0.154804006,0.00958499964,0.0211549997,
		0.0804840028,0.00958499964,0.0211549997,0.0853580013,0.00958499964,-0.00112699997,0.159677997,0.00958499964,-0.00112699997,0.192928001,0.00958499964,-0.153132007,
		0.105570003,0.00958499964,-0.153132007,-0.0474070013,0.00958499964,-0.142530993,-0.0356360003,0.00958499964,-0.149750993,-0.00773799978,0.00958499964,-0.151281998,
		0.00596700003,0.00958499964,-0.137105003,0.00572599983,0.00958499964,-0.128668994,-0.0528820008,0.00958499964,0.138927996,-0.0578359999,0.00958499964,0.149403006,
		-0.0873330012,0.00958499964,0.165346995,-0.105949998,0.00958499964,0.162524998,-0.113445997,0.00958499964,0.156231001,-0.116263002,0.00958499964,0.141097993,
		-0.0868040025,0.00958499964,-0.128868997,-0.0654430017,0.00958499964,-0.160255998,-0.0252199993,0.00958499964,-0.175548002,0.0024639999,0.00958499964,-0.173484996,
		0.02874,0.00958499964,-0.156636998,0.0348259993,0.00958499964,-0.126408994,-0.0237339996,0.00958499964,0.141299993,-0.0449870005,0.00958499964,0.172361001,
		-0.0852919966,0.00958499964,0.187968001,-0.113055997,0.00958499964,0.185853004,-0.137124002,0.00958499964,0.171271995,-0.143952996,0.00958499964,0.160441995,
		-0.145364001,0.00958499964,0.138841003,-0.138130993,0.00958499964,0.105775997,-0.108537003,0.00958499964,0.105775997,-0.068843998,0.00958499964,0.159045994,
		-0.0577909984,0.00958499964,-0.126210004,-0.0845979974,0.00958499964,-0.00365999993,-0.0409189984,0.00958199985,-0.00365999993,-0.0457930006,0.00958199985,0.0186219998,
		-0.119066998,0.00958499964,0.0186219998,-0.284456015,0.00958499964,0.165162995,-0.300512999,0.00958499964,0.156231001,-0.303330988,0.00958499964,0.141097993,
		-0.230770007,0.00958499964,-0.145319,-0.219373003,0.00958499964,-0.150956005,-0.197924003,0.00958499964,-0.152335003,-0.183286995,0.00958499964,-0.142545,
		-0.181341007,0.00958499964,-0.128668994,-0.239813998,0.00958499964,0.138638005,-0.152241006,0.00958499964,-0.126408994,-0.244857997,0.00958499964,-0.126210004,
		-0.273871005,0.00958499964,-0.128868997,-0.252510011,0.00958499964,-0.160255998,-0.212286994,0.00958499964,-0.175549001,-0.200004995,0.00958499964,-0.175830007,
		-0.171191007,0.00958499964,-0.167862996,-0.154874995,0.00958499964,-0.151199996,-0.151205003,0.00958499964,-0.136102006,-0.210801005,0.00958499964,0.141299993,
		-0.232053995,0.00958499964,0.172361001,-0.256590992,0.00958499964,0.184871003,-0.272359997,0.00958499964,0.187968001,-0.300123006,0.00958499964,0.185852006,
		-0.324191004,0.00958499964,0.171271995,-0.331019998,0.00958499964,0.160441995,-0.332432002,0.00958499964,0.138841003,-0.257927001,0.00958499964,0.160215005]
    normals=[-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-9.99999975e-05,-1,-9.99999975e-05,-9.99999975e-05,-1,-9.99999975e-05,
		-9.99999975e-05,-1,-9.99999975e-05,-9.99999975e-05,-1,-9.99999975e-05,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-1,-0,-0,-1,-0,-0,-1,-0,
		-0,-1,-0,-0,-0,1,-0,-0,1,-0,-0,1,
		-0,-0,1,-0,-0,1,-0,-0,1,-0,-0,1,
		-0,-0,1,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,
		-0.976899385,-0,-0.213699862,-0.550284863,-0,-0.834976971,-0.550284863,-0,-0.834976971,-0.550284863,-0,-0.834976971,
		-0.550284863,-0,-0.834976971,0.976899385,-0,0.213699862,0.976899385,-0,0.213699862,0.976899385,-0,0.213699862,
		0.976899385,-0,0.213699862,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,-0,-0,-1,-0,-0,-1,-0,-0,-1,
		-0,-0,-1,-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,
		-0.976899385,-0,-0.213699862,0.550284863,-0,0.834976971,0.550284863,-0,0.834976971,0.550284863,-0,0.834976971,
		0.550284863,-0,0.834976971,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,-0,1,-0,-0,1,-0,0.976899385,-0,0.213699862,
		0.976899385,-0,0.213699862,0.976899385,-0,0.213699862,0.976899385,-0,0.213699862,-0,-0,-1,
		-0,-0,-1,-0,-0,-1,-0,-0,-1,-0.976899385,-0,-0.213699862,
		-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,-0,-0,1,
		-0,-0,1,-0,-0,1,-0,-0,1,-0.976899385,-0,-0.213699862,
		-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,-0,-0,1,
		-0,-0,1,-0,-0,1,-0,-0,1,-0.976899385,-0,-0.213699862,
		-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,-0,-0,1,
		-0,-0,1,-0,-0,1,-0,-0,1,-0,-0,-1,
		-0,-0,-1,-0,-0,-1,-0,-0,-1,-0.976899385,-0,-0.213699862,
		-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,-0,-0,-1,
		-0,-0,-1,-0,-0,-1,-0,-0,-1,-0.976899385,-0,-0.213699862,
		-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,-0,1,-0,
		-0,1,-0,-0,1,-0,-0,1,-0,9.99999975e-05,1,9.99999975e-05,
		9.99999975e-05,1,9.99999975e-05,9.99999975e-05,1,9.99999975e-05,9.99999975e-05,1,9.99999975e-05,-0,1,-0,
		-0,1,-0,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,0.976899385,-0,0.213699862,0.976899385,-0,0.213699862,0.976899385,-0,0.213699862,
		0.976899385,-0,0.213699862,-0.809591413,-0,0.586993814,-0.809591413,-0,0.586993814,-0.809591413,-0,0.586993814,
		-0.809591413,-0,0.586993814,-0,-0,-1,-0,-0,-1,-0,-0,-1,
		-0,-0,-1,0.976899385,-0,0.213699862,0.976899385,-0,0.213699862,0.976899385,-0,0.213699862,
		0.976899385,-0,0.213699862,-0.999704778,-0,0.0243001152,-0.999704778,-0,0.0243001152,-0.999704778,-0,0.0243001152,
		-0.999704778,-0,0.0243001152,-0,-0,1,-0,-0,1,-0,-0,1,
		-0,-0,1,0.363584816,-0,0.931561112,0.363584816,-0,0.931561112,0.363584816,-0,0.931561112,
		0.363584816,-0,0.931561112,-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,
		-0.976899385,-0,-0.213699862,-0.895484746,-0,-0.44509241,-0.895484746,-0,-0.44509241,-0.895484746,-0,-0.44509241,
		-0.895484746,-0,-0.44509241,-0.309981316,-0,-0.950742662,-0.309981316,-0,-0.950742662,-0.309981316,-0,-0.950742662,
		-0.309981316,-0,-0.950742662,-0.271206021,-0,-0.962521315,-0.271206021,-0,-0.962521315,-0.271206021,-0,-0.962521315,
		-0.271206021,-0,-0.962521315,0.0487006567,-0,-0.99881345,0.0487006567,-0,-0.99881345,0.0487006567,-0,-0.99881345,
		0.0487006567,-0,-0.99881345,-0.0729028583,-0,0.997339129,-0.0729028583,-0,0.997339129,-0.0729028583,-0,0.997339129,
		-0.0729028583,-0,0.997339129,-0.0227009617,-0,-0.999742329,-0.0227009617,-0,-0.999742329,-0.0227009617,-0,-0.999742329,
		-0.0227009617,-0,-0.999742329,0.642326295,-0,-0.766431332,0.642326295,-0,-0.766431332,0.642326295,-0,-0.766431332,
		0.642326295,-0,-0.766431332,-0.425888538,-0,0.90477562,-0.425888538,-0,0.90477562,-0.425888538,-0,0.90477562,
		-0.425888538,-0,0.90477562,0.964738488,-0,-0.263210535,0.964738488,-0,-0.263210535,0.964738488,-0,-0.263210535,
		0.964738488,-0,-0.263210535,0.479909778,-0,-0.877317905,0.479909778,-0,-0.877317905,0.479909778,-0,-0.877317905,
		0.479909778,-0,-0.877317905,-0.910095751,-0,0.414398074,-0.910095751,-0,0.414398074,-0.910095751,-0,0.414398074,
		-0.910095751,-0,0.414398074,-0.998186409,-0,0.0601991788,-0.998186409,-0,0.0601991788,-0.998186409,-0,0.0601991788,
		-0.998186409,-0,0.0601991788,0.972138047,-0,-0.234409168,0.972138047,-0,-0.234409168,0.972138047,-0,-0.234409168,
		0.972138047,-0,-0.234409168,-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,
		-0.976899385,-0,-0.213699862,-0,-0,-1,-0,-0,-1,-0,-0,-1,
		-0,-0,-1,0.976899385,-0,0.213699862,0.976899385,-0,0.213699862,0.976899385,-0,0.213699862,
		0.976899385,-0,0.213699862,0.976899385,-0,0.213699862,0.976899385,-0,0.213699862,0.976899385,-0,0.213699862,
		0.976899385,-0,0.213699862,0.843080401,-0,0.537787497,0.843080401,-0,0.537787497,0.843080401,-0,0.537787497,
		0.843080401,-0,0.537787497,-0.599599957,-0,-0.800299883,-0.599599957,-0,-0.800299883,-0.599599957,-0,-0.800299883,
		-0.599599957,-0,-0.800299883,-0.976853013,-0,-0.213911608,-0.976853013,-0,-0.213911608,-0.976853013,-0,-0.213911608,
		-0.976853013,-0,-0.213911608,0.0477979444,-0,0.998857021,0.0477979444,-0,0.998857021,0.0477979444,-0,0.998857021,
		0.0477979444,-0,0.998857021,0.786581993,-0,0.617485881,0.786581993,-0,0.617485881,0.786581993,-0,0.617485881,
		0.786581993,-0,0.617485881,0.522707462,-0,0.85251224,0.522707462,-0,0.85251224,0.522707462,-0,0.85251224,
		0.522707462,-0,0.85251224,-0.788074434,-0,-0.615580022,-0.788074434,-0,-0.615580022,-0.788074434,-0,-0.615580022,
		-0.788074434,-0,-0.615580022,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,-0,1,-0,-0,1,-0,-0,1,-0,
		-0,1,-0,-0,1,-0,-0,1,-0,-0,1,-0,
		-0.704200864,-0,-0.710000813,-0.704200864,-0,-0.710000813,-0.704200864,-0,-0.710000813,-0.704200864,-0,-0.710000813,
		-0.196404621,-0,-0.98052299,-0.196404621,-0,-0.98052299,-0.196404621,-0,-0.98052299,-0.196404621,-0,-0.98052299,
		-0.788036525,-0,-0.615628541,-0.788036525,-0,-0.615628541,-0.788036525,-0,-0.615628541,-0.788036525,-0,-0.615628541,
		-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,
		0.540474534,-0,0.84136039,0.540474534,-0,0.84136039,0.540474534,-0,0.84136039,0.540474534,-0,0.84136039,
		0.46310246,-0,-0.886304796,0.46310246,-0,-0.886304796,0.46310246,-0,-0.886304796,0.46310246,-0,-0.886304796,
		0.953878462,-0,-0.30019322,0.953878462,-0,-0.30019322,0.953878462,-0,-0.30019322,0.953878462,-0,-0.30019322,
		0.217396319,-0,0.976083517,0.217396319,-0,0.976083517,0.217396319,-0,0.976083517,0.217396319,-0,0.976083517,
		-0.309890896,-0,-0.950772107,-0.309890896,-0,-0.950772107,-0.309890896,-0,-0.950772107,-0.309890896,-0,-0.950772107,
		0.976899385,-0,0.213699862,0.976899385,-0,0.213699862,0.976899385,-0,0.213699862,0.976899385,-0,0.213699862,
		0.805249393,-0,0.592936397,0.805249393,-0,0.592936397,0.805249393,-0,0.592936397,0.805249393,-0,0.592936397,
		-0.0729028583,-0,0.997339129,-0.0729028583,-0,0.997339129,-0.0729028583,-0,0.997339129,-0.0729028583,-0,0.997339129,
		9.99999975e-05,-0,1,9.99999975e-05,-0,1,9.99999975e-05,-0,1,9.99999975e-05,-0,1,
		-0.0227009617,-0,-0.999742329,-0.0227009617,-0,-0.999742329,-0.0227009617,-0,-0.999742329,-0.0227009617,-0,-0.999742329,
		-0.425888538,-0,0.90477562,-0.425888538,-0,0.90477562,-0.425888538,-0,0.90477562,-0.425888538,-0,0.90477562,
		-0.695309818,-0,0.718710184,-0.695309818,-0,0.718710184,-0.695309818,-0,0.718710184,-0.695309818,-0,0.718710184,
		0.294092864,-0,-0.95577687,0.294092864,-0,-0.95577687,0.294092864,-0,-0.95577687,0.294092864,-0,-0.95577687,
		-0.9893592,-0,0.145493999,-0.9893592,-0,0.145493999,-0.9893592,-0,0.145493999,-0.9893592,-0,0.145493999,
		0.600399911,-0,-0.799699903,0.600399911,-0,-0.799699903,0.600399911,-0,-0.799699903,0.600399911,-0,-0.799699903,
		-0.910095751,-0,0.414398074,-0.910095751,-0,0.414398074,-0.910095751,-0,0.414398074,-0.910095751,-0,0.414398074,
		-0.99819237,-0,0.0600995421,-0.99819237,-0,0.0600995421,-0.99819237,-0,0.0600995421,-0.99819237,-0,0.0600995421,
		0.972166359,-0,-0.234291896,0.972166359,-0,-0.234291896,0.972166359,-0,-0.234291896,0.972166359,-0,-0.234291896,
		-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,-0.976899385,-0,-0.213699862,
		0.439075619,-0,0.898450136,0.439075619,-0,0.898450136,0.439075619,-0,0.898450136,0.439075619,-0,0.898450136,
		0.99418366,-0,0.107698224,0.99418366,-0,0.107698224,0.99418366,-0,0.107698224,0.99418366,-0,0.107698224,
		0.976899385,-0,0.213699862,0.976899385,-0,0.213699862,0.976899385,-0,0.213699862,0.976899385,-0,0.213699862,
		0.786581993,-0,0.617485881,0.786581993,-0,0.617485881,0.786581993,-0,0.617485881,0.786581993,-0,0.617485881]
    stValues=[0.960292995,0.857984006,0.960292995,0.877803981,0.962387979,0.878094971,0.962387979,0.858245015
		,0.955837011,0.876646996,0.955837011,0.856827021,0.953742981,0.856535971,0.953742981,0.876385987,0.949692011,0.332244992,0.949692011,0.352095991
		,0.951790988,0.352378994,0.951785982,0.332536012,0.956242979,0.342779994,0.953152001,0.342103988,0.953152001,0.34375599,0.958337009,0.344889998
		,0.956242979,0.342779994,0.958337009,0.344889998,0.958337009,0.333954006,0.956242979,0.333692998,0.956242979,0.333692998,0.958337009,0.333954006
		,0.957310975,0.331402004,0.95470202,0.329697013,0.952710986,0.329414994,0.950591028,0.330199987,0.949692011,0.332244992,0.951785982,0.332536012
		,0.951900005,0.331934988,0.953088999,0.331144005,0.955039978,0.331683993,0.955761015,0.332376987,0.958337009,0.353803992,0.958337009,0.35135299
		,0.956242979,0.350894004,0.956242979,0.353513986,0.951979995,0.353197008,0.951790988,0.352378994,0.949692011,0.352095991,0.950715005,0.35462299
		,0.953325987,0.356350988,0.955322981,0.356631011,0.957252026,0.355971992,0.957903028,0.355311006,0.958337009,0.353803992,0.956242979,0.353513986
		,0.955808997,0.354541004,0.955181003,0.354869992,0.95381999,0.354781985,0.952609003,0.35405001,0.955837011,0.876646996,0.953742981,0.876385987
		,0.954768002,0.878938019,0.95737797,0.88064301,0.958243012,0.880852997,0.960404992,0.88073498,0.961817026,0.879808009,0.962311029,0.878796995
		,0.962387979,0.878094971,0.960292995,0.877803981,0.95994103,0.878755987,0.958754003,0.879221976,0.957256973,0.878793001,0.956538022,0.878217995
		,0.960292995,0.857984006,0.962387979,0.858245015,0.961363971,0.855718017,0.959821999,0.854453027,0.958754003,0.853989005,0.956757009,0.853708982
		,0.954828024,0.854368985,0.954177022,0.855028987,0.953742981,0.856535971,0.955837011,0.856827021,0.956269979,0.855799019,0.957544982,0.855416
		,0.959345996,0.856176972,0.0777359977,0.894176006,0.0694599971,0.892365992,0.0715539977,0.894514024,0.0777359977,0.895865977,0.0715539977,0.907437027
		,0.0768129975,0.908586979,0.0768129975,0.906934977,0.0715539977,0.905785024,0.0694599971,0.919376016,0.0777359977,0.921186984,0.0777359977,0.919497013
		,0.0715539977,0.918145001,0.0694599971,0.892365992,0.0694599971,0.919376016,0.0715539977,0.918145001,0.0715539977,0.907437027,0.0715539977,0.905785024
		,0.0715539977,0.894514024,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0.545780003,0.984972,0.543685973,0.982824028,0.543685973,0.957503021
		,0.545780003,0.957961977,0,0,0,0,0,0,0,0,0.545780003,0.984972
		,0.543685973,0.982824028,0.543685973,0.982824028,0.545780003,0.984972,0,0,0,0,0,0
		,0,0,0.537504017,0.983161986,0.537504017,0.981472015,0.543685973,0.982824028,0.545780003,0.984972,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0.543685973,0.982824028,0.545780003,0.984972,0.545780003,0.984972,0.543685973,0.982824028,0.0777359977,0.894176006
		,0.0777359977,0.895865977,0.0715539977,0.894514024,0.0694599971,0.892365992,0.0715539977,0.907437027,0.0715539977,0.905785024,0.0768129975,0.906934977
		,0.0768129975,0.908586979,0.0694599971,0.919376016,0.0715539977,0.918145001,0.0777359977,0.919497013,0.0777359977,0.921186984,0.0694599971,0.892365992
		,0.0715539977,0.894514024,0.0715539977,0.905785024,0.0715539977,0.907437027,0.0715539977,0.918145001,0.0694599971,0.919376016,0.0694599971,0.919376016
		,0.0694599971,0.892365992,0.0694599971,0.892365992,0.0694599971,0.919376016,0.0715539977,0.905785024,0.0768129975,0.906934977,0.0768129975,0.906934977
		,0.0715539977,0.905785024,0.0715539977,0.907437027,0.0715539977,0.918145001,0.0715539977,0.918145001,0.0715539977,0.907437027,0.0777359977,0.921186984
		,0.0694599971,0.919376016,0.0694599971,0.919376016,0.0777359977,0.921186984,0.0715539977,0.894514024,0.0715539977,0.905785024,0.0715539977,0.905785024
		,0.0715539977,0.894514024,0.0768129975,0.908586979,0.0715539977,0.907437027,0.0715539977,0.907437027,0.0768129975,0.908586979,0.0777359977,0.919497013
		,0.0777359977,0.921186984,0.0777359977,0.921186984,0.0777359977,0.919497013,0.0777359977,0.895865977,0.0715539977,0.894514024,0.0715539977,0.894514024
		,0.0777359977,0.895865977,0.0694599971,0.892365992,0.0777359977,0.894176006,0.0777359977,0.894176006,0.0694599971,0.892365992,0.0768129975,0.906934977
		,0.0768129975,0.908586979,0.0768129975,0.908586979,0.0768129975,0.906934977,0.0715539977,0.918145001,0.0777359977,0.919497013,0.0777359977,0.919497013
		,0.0715539977,0.918145001,0.0777359977,0.894176006,0.0777359977,0.895865977,0.0777359977,0.895865977,0.0777359977,0.894176006,0.949692011,0.332244992
		,0.951785982,0.332536012,0.951790988,0.352378994,0.949692011,0.352095991,0.956242979,0.342779994,0.958337009,0.344889998,0.953152001,0.34375599
		,0.953152001,0.342103988,0.956242979,0.342779994,0.956242979,0.333692998,0.958337009,0.333954006,0.958337009,0.344889998,0.956242979,0.333692998
		,0.955761015,0.332376987,0.955039978,0.331683993,0.953088999,0.331144005,0.951900005,0.331934988,0.951785982,0.332536012,0.949692011,0.332244992
		,0.950591028,0.330199987,0.952710986,0.329414994,0.95470202,0.329697013,0.957310975,0.331402004,0.958337009,0.333954006,0.958337009,0.353803992
		,0.956242979,0.353513986,0.956242979,0.350894004,0.958337009,0.35135299,0.951979995,0.353197008,0.952609003,0.35405001,0.95381999,0.354781985
		,0.955181003,0.354869992,0.955808997,0.354541004,0.956242979,0.353513986,0.958337009,0.353803992,0.957903028,0.355311006,0.957252026,0.355971992
		,0.955322981,0.356631011,0.953325987,0.356350988,0.950715005,0.35462299,0.949692011,0.352095991,0.951790988,0.352378994,0.956242979,0.342779994
		,0.956242979,0.333692998,0.956242979,0.333692998,0.956242979,0.342779994,0.953088999,0.331144005,0.951900005,0.331934988,0.951900005,0.331934988
		,0.953088999,0.331144005,0.953152001,0.342103988,0.956242979,0.342779994,0.956242979,0.342779994,0.953152001,0.342103988,0.953152001,0.34375599
		,0.953152001,0.342103988,0.953152001,0.342103988,0.953152001,0.34375599,0.951900005,0.331934988,0.951785982,0.332536012,0.951785982,0.332536012
		,0.951900005,0.331934988,0.958337009,0.344889998,0.953152001,0.34375599,0.953152001,0.34375599,0.958337009,0.344889998,0.953325987,0.356350988
		,0.950715005,0.35462299,0.950715005,0.35462299,0.953325987,0.356350988,0.958337009,0.333954006,0.958337009,0.344889998,0.958337009,0.344889998
		,0.958337009,0.333954006,0.951790988,0.352378994,0.951979995,0.353197008,0.951979995,0.353197008,0.951790988,0.352378994,0.95470202,0.329697013
		,0.957310975,0.331402004,0.957310975,0.331402004,0.95470202,0.329697013,0.952609003,0.35405001,0.95381999,0.354781985,0.95381999,0.354781985
		,0.952609003,0.35405001,0.95381999,0.354781985,0.955181003,0.354869992,0.955181003,0.354869992,0.95381999,0.354781985,0.955322981,0.356631011
		,0.953325987,0.356350988,0.953325987,0.356350988,0.955322981,0.356631011,0.952710986,0.329414994,0.95470202,0.329697013,0.95470202,0.329697013
		,0.952710986,0.329414994,0.955181003,0.354869992,0.955808997,0.354541004,0.955808997,0.354541004,0.955181003,0.354869992,0.957252026,0.355971992
		,0.955322981,0.356631011,0.955322981,0.356631011,0.957252026,0.355971992,0.955808997,0.354541004,0.956242979,0.353513986,0.956242979,0.353513986
		,0.955808997,0.354541004,0.950591028,0.330199987,0.952710986,0.329414994,0.952710986,0.329414994,0.950591028,0.330199987,0.957903028,0.355311006
		,0.957252026,0.355971992,0.957252026,0.355971992,0.957903028,0.355311006,0.958337009,0.353803992,0.957903028,0.355311006,0.957903028,0.355311006,
		0.958337009,0.353803992,0.949692011,0.332244992,0.950591028,0.330199987,0.950591028,0.330199987,0.949692011,0.332244992,0.958337009,0.35135299,
		0.958337009,0.353803992,0.958337009,0.353803992,0.958337009,0.35135299,0.956242979,0.350894004,0.958337009,0.35135299,0.958337009,0.35135299,
		0.956242979,0.350894004,0.956242979,0.353513986,0.956242979,0.350894004,0.956242979,0.350894004,0.956242979,0.353513986,0.949692011,0.352095991,
		0.949692011,0.332244992,0.949692011,0.332244992,0.949692011,0.352095991,0.956242979,0.333692998,0.955761015,0.332376987,0.955761015,0.332376987,
		0.956242979,0.333692998,0.951979995,0.353197008,0.952609003,0.35405001,0.952609003,0.35405001,0.951979995,0.353197008,0.951785982,0.332536012,
		0.951790988,0.352378994,0.951790988,0.352378994,0.951785982,0.332536012,0.955039978,0.331683993,0.953088999,0.331144005,0.953088999,0.331144005,
		0.955039978,0.331683993,0.950715005,0.35462299,0.949692011,0.352095991,0.949692011,0.352095991,0.950715005,0.35462299,0.955761015,0.332376987,
		0.955039978,0.331683993,0.955039978,0.331683993,0.955761015,0.332376987,0.957310975,0.331402004,0.958337009,0.333954006,0.958337009,0.333954006,
		0.957310975,0.331402004,0.960292995,0.857984006,0.962387979,0.858245015,0.962387979,0.878094971,0.960292995,0.877803981,0.955837011,0.876646996,
		0.953742981,0.876385987,0.953742981,0.856535971,0.955837011,0.856827021,0.955837011,0.876646996,0.956538022,0.878217995,0.957256973,0.878793001,
		0.958754003,0.879221976,0.95994103,0.878755987,0.960292995,0.877803981,0.962387979,0.878094971,0.962311029,0.878796995,0.961817026,0.879808009,
		0.960404992,0.88073498,0.958243012,0.880852997,0.95737797,0.88064301,0.954768002,0.878938019,0.953742981,0.876385987,0.960292995,0.857984006,
		0.959345996,0.856176972,0.957544982,0.855416,0.956269979,0.855799019,0.955837011,0.856827021,0.953742981,0.856535971,0.954177022,0.855028987,
		0.954828024,0.854368985,0.956757009,0.853708982,0.958754003,0.853989005,0.959821999,0.854453027,0.961363971,0.855718017,0.962387979,0.858245015,
		0.960292995,0.857984006,0.959345996,0.856176972,0.959345996,0.856176972,0.960292995,0.857984006,0.959345996,0.856176972,0.957544982,0.855416,
		0.957544982,0.855416,0.959345996,0.856176972,0.954768002,0.878938019,0.953742981,0.876385987,0.953742981,0.876385987,0.954768002,0.878938019,
		0.960292995,0.877803981,0.960292995,0.857984006,0.960292995,0.857984006,0.960292995,0.877803981,0.959821999,0.854453027,0.961363971,0.855718017,
		0.961363971,0.855718017,0.959821999,0.854453027,0.957544982,0.855416,0.956269979,0.855799019,0.956269979,0.855799019,0.957544982,0.855416,
		0.956269979,0.855799019,0.955837011,0.856827021,0.955837011,0.856827021,0.956269979,0.855799019,0.958754003,0.853989005,0.959821999,0.854453027,
		0.959821999,0.854453027,0.958754003,0.853989005,0.95737797,0.88064301,0.954768002,0.878938019,0.954768002,0.878938019,0.95737797,0.88064301,
		0.962387979,0.858245015,0.962387979,0.878094971,0.962387979,0.878094971,0.962387979,0.858245015,0.955837011,0.876646996,0.956538022,0.878217995,
		0.956538022,0.878217995,0.955837011,0.876646996,0.956757009,0.853708982,0.958754003,0.853989005,0.958754003,0.853989005,0.956757009,0.853708982,
		0.957256973,0.878793001,0.958754003,0.879221976,0.958754003,0.879221976,0.957256973,0.878793001,0.958243012,0.880852997,0.95737797,0.88064301,
		0.95737797,0.88064301,0.958243012,0.880852997,0.954828024,0.854368985,0.956757009,0.853708982,0.956757009,0.853708982,0.954828024,0.854368985,
		0.958754003,0.879221976,0.95994103,0.878755987,0.95994103,0.878755987,0.958754003,0.879221976,0.960404992,0.88073498,0.958243012,0.880852997,
		0.958243012,0.880852997,0.960404992,0.88073498,0.95994103,0.878755987,0.960292995,0.877803981,0.960292995,0.877803981,0.95994103,0.878755987,
		0.961817026,0.879808009,0.960404992,0.88073498,0.960404992,0.88073498,0.961817026,0.879808009,0.954177022,0.855028987,0.954828024,0.854368985,
		0.954828024,0.854368985,0.954177022,0.855028987,0.953742981,0.856535971,0.954177022,0.855028987,0.954177022,0.855028987,0.953742981,0.856535971,
		0.962311029,0.878796995,0.961817026,0.879808009,0.961817026,0.879808009,0.962311029,0.878796995,0.953742981,0.876385987,0.953742981,0.856535971,
		0.953742981,0.856535971,0.953742981,0.876385987,0.956538022,0.878217995,0.957256973,0.878793001,0.957256973,0.878793001,0.956538022,0.878217995,
		0.962387979,0.878094971,0.962311029,0.878796995,0.962311029,0.878796995,0.962387979,0.878094971,0.955837011,0.856827021,0.955837011,0.876646996,
		0.955837011,0.876646996,0.955837011,0.856827021,0.961363971,0.855718017,0.962387979,0.858245015,0.962387979,0.858245015,0.961363971,0.855718017]

    ri.PointsGeneralPolygons(npolys,nvertices,PolyVerts,{ri.P:points, 'facevarying normal N':normals, 'facevarying float[2] st':stValues})

def Lego_logo_disk(R,G,B,stud_radius) :
    ri.TransformBegin()
    ri.AttributeBegin()
    ri.Rotate(180,0,1,0)
    """ri.Attribute("trace", {"displacements": [1]})
    ri.Attribute("displacementbound", {"sphere": [0.1]})

    ri.Pattern('PolarToCartesian','PolarToCartesianDisplacement',
    {
        "string textureFile" : ["../images/lego_logo4_displacement.tex"] 
    })
    
    ri.Pattern("PxrDispTransform","LL_DispTransform",
    {
        "reference vector dispVector" : ["PolarToCartesianDisplacement:position"],
    })

    ri.Displace("PxrDisplace","LegoLogoDisplace",
    {
        "reference vector dispVector" : ["LL_DispTransform:resultXYZ"],
        "float dispAmount" : [1.0],
    })

    ri.Pattern('PolarToCartesian','PolarToCartesianNormal',
    {
        "string textureFile" : ["../images/lego_logo4_normal.tex"] 
    })

    ri.Pattern("PxrNormalMap","LegoLogoNormal",
    {
        "float BumpScale" : 2.0,
        "int invertBump" : [0],
        "reference float inputRGB" : ["PolarToCartesianNormal:position"],
        #"string filename" : ["../images/lego_logo4_normal.tex"],
    })"""

    ri.Bxdf("PxrSurface", "LegoLogoColor",
	{   
        'reference color diffuseColor' : ["Smudges:Cout"],
		'float specularRoughness' : [0.14],
        'float roughSpecularRoughness' : [0.6],
        'float clearcoatRoughness' : [0.04],
        'float subsurfaceGain' : [0.02],
        'color subsurfaceColor' : [0.8,0.7,0.75],
		'int diffuseDoubleSided' : [1],
		'float reflectionGain' : [0.5], 
		'float glassRoughness' : [0.1],
		#"reference normal bumpNormal" : ["LegoLogoNormal:resultN"],
	})
    ri.Disk(0, stud_radius, 360)
    ri.Translate(0,0,0.01)
    ri.Rotate(90,1,0,0)
    Lego_Logo_2(0.5,0.5,0.5)
    #ri.Disk(0, stud_radius, 360,["PolarToCartesianDisplacement:position[0]"],["PolarToCartesianDisplacement:position[1]"],["PolarToCartesianDisplacement:position[2]"])
    ri.AttributeEnd()
    ri.TransformEnd()

def Lego_piece (R=255,G=150,B=0.00,studs=4,height=0.6):
    ri.Pattern('Smudges','Smudges',
    {
        'color colourIn' : [R/255,G/255,B/255],
    })
    ri.Pattern('surfaceSpots','Spots',
    {
    })
    ri.Bxdf('PxrSurface', 'plastic',
	{
		'reference color diffuseColor' : ["Smudges:Cout"],
        'float specularRoughness' : [0.14],
        'float roughSpecularRoughness' : [0.6],
        'float clearcoatRoughness' : [0.04],
        'float subsurfaceGain' : [0.02],
        'reference color subsurfaceColor' : ["Spots:Cout"],
		'int diffuseDoubleSided' : [1],
		'float reflectionGain' : [0.5], 
		'float glassRoughness' : [0.1]
	})  

    width=2.0
    depth=2.0
    stud_radius=0.30

    if(studs%4==0):
        if (studs>=4):
            width=width
            height=height
            depth=depth*(studs/4)
        Cube(width,height,depth)
        i=1
        for number in range(1,studs-i):   
            if(i<=studs-i):
                if(depth*i/number <= depth):    
                    # Cylinder 1
                    ri.TransformBegin()
                    ri.Translate(-width/4, 0, depth*i/studs)
                    ri.Rotate(90, 1, 0, 0)
                    ri.Cylinder(stud_radius, 0, -height/1.6, 360)
                    ri.Translate(0,0,-height/1.6)
                    Lego_logo_disk(R,G,B,stud_radius)
                    ri.TransformEnd()
                    # Cylinder 2
                    ri.TransformBegin()
                    ri.Translate(width/4, 0, depth*i/studs)
                    ri.Rotate(90, 1, 0, 0)
                    ri.Cylinder(stud_radius, 0, -height/1.6, 360)
                    ri.Translate(0,0,-height/1.6)
                    Lego_logo_disk(R,G,B,stud_radius)
                    ri.TransformEnd()
                    # Cylinder 3
                    ri.TransformBegin()
                    ri.Translate(-width/4, 0, -depth*i/studs)
                    ri.Rotate(90, 1, 0, 0)
                    ri.Cylinder(stud_radius, 0, -height/1.6, 360)
                    ri.Translate(0,0,-height/1.6)
                    Lego_logo_disk(R,G,B,stud_radius)
                    ri.TransformEnd()
                    # Cylinder 4
                    ri.TransformBegin()
                    ri.Translate(width/4, 0, -depth*i/studs)
                    ri.Rotate(90, 1, 0, 0)
                    ri.Cylinder(stud_radius, 0, -height/1.6, 360)
                    ri.Translate(0,0,-height/1.6)
                    Lego_logo_disk(R,G,B,stud_radius)
                    ri.TransformEnd()
                    i=i+2
            number=number+4

    else:
        print("Error. No. of studs should be divisible by 4")    

def Table() :
    ri.AttributeBegin()
    ri.Pattern("PxrTexture","WoodBump",
    {
        "string filename" : ["../images/wood_displacement.tex"],
    })
    ri.Attribute("trace", {"displacements": [1]})
    ri.Attribute("displacementbound", {"sphere": [0.1]})
    ri.Pattern("PxrDispTransform","Wood_DispTransform",
    {
        "reference vector dispVector" : ["WoodBump:resultRGB"],
        "float dispDepth" : [0.7],
        "float dispHeight" :[0.7],
        "int dispType" :[2],
        "int vectorSpace" :[3],
        "int dispRemapMode": [1],
        "float dispCenter" :[0],
    })

    ri.Displace("PxrDisplace","WoodDisplace",
    {
        "reference vector dispVector" : ["Wood_DispTransform:resultXYZ"],
        "float dispAmount" : [0.03],
    })
    ri.Pattern("PxrNormalMap","WoodNormal",
    {
        "float BumpScale" : 1.0,
        "string filename" : ["../images/wood_normal.tex"],
    })
    ri.Pattern('PxrTexture','WoodColor', 
	{ 
		'string filename' : ["../images/wood_diffuse.tex"]
	})
    ri.Bxdf('PxrDisney', 'wood',
	{
		'reference color baseColor' : ['WoodColor:resultRGB'],
		'reference normal bumpNormal' : ['WoodNormal:resultN'],
        "float metallic" : [0],
        "float roughness" : [0.6],
        "float specular" : [0],
	})
    
    ri.TransformBegin() 
    ri.Rotate(20,0,1,0)
    ri.Translate(-3,-1.3,-0.5)

    ##Table dimensions.
    width=20
    height=1
    depth=8

    w=width/2.0
    h=height/2.0
    d=depth/2.0

    ##Plane.
    plane=[w,h,d,w,h,-d,-w,h,d,-w,h,-d]								
    ri.Patch("bilinear",{'P':plane})
    ri.TransformEnd() 
    ri.AttributeEnd()

shaderName="PolarToCartesian"
checkAndCompileShader(shaderName)
shaderName="Smudges"
checkAndCompileShader(shaderName)
shaderName="surfaceSpots"
checkAndCompileShader(shaderName)
ri = prman.Ri()  # create an instance of the RenderMan interface
ri.Option("rib", {"string asciistyle": "indented"})
filename = "assignment_final.rib"
# this is the begining of the rib archive generation we can only
# make RI calls after this function else we get a core dump
ri.Begin("__render")  # filename)
# ArchiveRecord is used to add elements to the rib stream in this case comments
# now we add the display element using the usual elements
# FILENAME DISPLAY Type Output format
ri.Display("assignment_final.exr", "it", "rgba")
# Specify PAL resolution 1:1 pixel Aspect ratio
ri.Format(1920, 1080, 1)
ri.ShadingRate(0.1)
ri.Hider("raytrace", {"int incremental": [1]})
ri.PixelVariance(0.005)
ri.Integrator("PxrPathTracer", "integrator")
# now set the projection to perspective
ri.Projection(ri.PERSPECTIVE, {ri.FOV: 24})
ri.DepthOfField(7, 0.8, 9.5)
ri.Translate(3, -2, 10)
ri.Rotate(-25,1,0,0)
ri.Scale(1,1,-1)
# now we start our world
ri.WorldBegin()
#''''''''''''''''''''''''''''''''''LIGHT BEGIN'''''''''''''''''''''''''''''''''''
	##HDRI light & background.
ri.TransformBegin()
ri.Rotate(80,1,0,0)
ri.Rotate(180,0,1,0)
"""ri.Rotate(-10,0,0,1)
ri.Light("PxrDomeLight","hdrLight", {"float exposure" : [0],"string lightColorMap" : ["../images/Atrium_HDRI.tex"]})"""
ri.Rotate(-70,0,0,1)
ri.Light("PxrDomeLight","hdrLight", {"float exposure" : [0], "string lightColorMap" : ["../images/Luxo-Jr_4000x2000.tex"]})

ri.TransformEnd()
	#'''''''''''''''''''''''''''''''''''LIGHT END''''''''''''''''''''''''''''''''''''


	#''''''''''''''STRUCTURE BEGINS'''''''''''''''
ri.TransformBegin()
ri.Translate(-2.5,1.5,0.6)
Table()
#Lego Structure Begins
#GreenBase1
ri.TransformBegin()
ri.Rotate(60, 0, 1, 0)
ri.Scale(0.3,0.3,0.3)
ri.Translate(2.0,-2.45,-0.2)
Lego_piece(0,82,37,8,0.3)
#GreenBase2starts
ri.TransformBegin()
ri.Translate(2,0,0)
Lego_piece(0,82,37,8,0.3)
ri.TransformEnd()
#GreenBase2ends
#First layer
ri.TransformBegin()
ri.Translate(0.0,0.6,1.0)
Lego_piece(200,191,160,4,1)
ri.Translate(1,0,-2)
ri.Rotate(270,0,1,0)
Lego_piece(5,31,52,8,1)
#Second layer
ri.TransformBegin()
ri.Translate(0,1.01,0)
Lego_piece(190,153,28,8,1)
#Third layer
ri.TransformBegin()
ri.Translate(0,1.01,0)
Lego_piece(5,31,52,8,1)
#Fourth Layer
ri.TransformBegin()
ri.Translate(0,1.01,1)
Lego_piece(73,38,25,4,1)
ri.Translate(0,0,-3.01)
Lego_piece(190,135,168,8,1)
#Fifth Layer
ri.TransformBegin()
ri.Translate(0,1.01,4)
Lego_piece(73,38,25,4,1)
#Sixth Layer
ri.TransformBegin()
ri.Translate(0,1.01,1)
Lego_piece(200,191,160,4,1)
ri.TransformEnd() #Sixth Layer Ends
ri.TransformEnd() #Fifth Layer Ends
ri.TransformEnd() #Fourth Layer Ends  
ri.TransformEnd() #Third Layer Ends
ri.TransformEnd() #Second Layer Ends
ri.TransformEnd() #First Layer Ends
ri.TransformEnd() #Green Base Layer Ends
#Lego Structure Ends

#1 piece begins
"""ri.Rotate(120, 0, 1, 0)
ri.Scale(0.3,0.4,0.3)
ri.Translate(2.5,-1.65,-0.2)
Lego_piece(5,31,52,8,1.2)
ri.TransformEnd()"""
#1 piece ends
	#''''''''''''''STRUCTURE ENDS'''''''''''''''

ri.TransformEnd()
ri.WorldEnd()
# and finally end the rib file
ri.End()