OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0@OPROJECT_VERSION_RELEASE_TYPE@
# options: 
shader PolarToCartesian
param	string	textureFile	""		%read{10,14} %write{2147483647,-1}
param	float	textureScale	1		%read{12,13} %write{2147483647,-1} %derivs
oparam	point	position	0 0 0		%read{16,16} %write{9,16}
oparam	float	z	0		%read{9,9} %write{8,8}
global	float	u	%read{3,7} %write{2147483647,-1} %derivs
global	float	v	%read{1,5} %write{2147483647,-1} %derivs
local	float	x	%read{9,12} %write{3,3} %derivs
local	float	y	%read{9,13} %write{7,7} %derivs
local	float	___325_a	%read{14,14} %write{12,12} %derivs
local	float	___325_b	%read{14,14} %write{13,13} %derivs
local	color	___325_texColor	%read{15,15} %write{14,14}
temp	float	$tmp1	%read{3,3} %write{2,2} %derivs
const	float	$const2	3.14159274		%read{0,4} %write{2147483647,-1}
temp	float	$tmp2	%read{1,1} %write{0,0} %derivs
const	float	$const3	2		%read{0,4} %write{2147483647,-1}
temp	float	$tmp3	%read{2,2} %write{1,1} %derivs
temp	float	$tmp4	%read{7,7} %write{6,6} %derivs
temp	float	$tmp5	%read{5,5} %write{4,4} %derivs
temp	float	$tmp6	%read{6,6} %write{5,5} %derivs
const	int	$const4	0		%read{8,8} %write{2147483647,-1}
const	string	$const5	""		%read{10,10} %write{2147483647,-1}
temp	int	$tmp7	%read{11,11} %write{10,10}
temp	vector	$tmp8	%read{16,16} %write{15,15}
code ___main___
# PolarToCartesian.osl:8
#     float x=u*sin(2*M_PI*v);
	mul		$tmp2 $const3 $const2 	%filename{"PolarToCartesian.osl"} %line{8} %argrw{"wrr"}
	mul		$tmp3 $tmp2 v 	%argrw{"wrr"}
	sin		$tmp1 $tmp3 	%argrw{"wr"}
	mul		x u $tmp1 	%argrw{"wrr"}
# PolarToCartesian.osl:9
#     float y=u*cos(2*M_PI*v);
	mul		$tmp5 $const3 $const2 	%line{9} %argrw{"wrr"}
	mul		$tmp6 $tmp5 v 	%argrw{"wrr"}
	cos		$tmp4 $tmp6 	%argrw{"wr"}
	mul		y u $tmp4 	%argrw{"wrr"}
# PolarToCartesian.osl:10
#     z = 0;  // Assuming the coordinates lie in the XY plane
	assign		z $const4 	%line{10} %argrw{"wr"}
# PolarToCartesian.osl:11
#     position = point(x, y, z);
	point		position x y z 	%line{11} %argrw{"wrrr"}
# PolarToCartesian.osl:13
#     if(textureFile !="")
	neq		$tmp7 textureFile $const5 	%line{13} %argrw{"wrr"}
	if		$tmp7 17 17 	%argrw{"r"}
# PolarToCartesian.osl:15
#         float a= x*textureScale;
	mul		___325_a x textureScale 	%line{15} %argrw{"wrr"}
# PolarToCartesian.osl:16
#         float b= y*textureScale;
	mul		___325_b y textureScale 	%line{16} %argrw{"wrr"}
# PolarToCartesian.osl:17
#         color texColor=texture(textureFile,a,b);
	texture		___325_texColor textureFile ___325_a ___325_b 	%line{17} %argrw{"wrrr"} %argderivs{2,3}
# PolarToCartesian.osl:18
#         position += vector(texColor);
	assign		$tmp8 ___325_texColor 	%line{18} %argrw{"wr"}
	add		position position $tmp8 	%argrw{"wrr"}
	end
